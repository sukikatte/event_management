title Sequence Diagram: 18 Buy Tickets(Alternative Courses of Events - Tickets Not Available)

actor "<link:_>User" as u
control "<link:_>: TicketController" as c
participant "<link:_>:EventService" as s
entity "<link:_>:Event" as e


== 1. No available tickets match the user's chosen criteria \n 2. The system notifies the user that no tickets are currently available==

u -> c:  buyTicket(admission)
activate c

c -> s: getEvent(name)
activate s
s -> e:  getEvent(name)
activate e

note over e:The getEvent(name) method \nchecks whether there are tickets available for \npurchase for that event.
e -->s: return SeatingNumberAvailable == 0
deactivate e

s --> c: return Event
deactivate s

note over c: The system notifies the user that \ntickets are unavailable

note right of u:This part happens in the JavaScript.

c -->u: return unavailable for purchase.
deactivate c
